<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <!-- Exceptions -->
        <parameter key="rednose_framework.exceptionhandler.class">Rednose\FrameworkBundle\EventListener\ExceptionListener</parameter>

        <parameter key="rednose_framework.doctrine_listener.class">Rednose\FrameworkBundle\EventListener\DoctrineListener</parameter>
        <parameter key="rednose_framework.datetime_formatter.class">Rednose\FrameworkBundle\DateTimeFormatter\DateTimeFormatter</parameter>
        <parameter key="rednose_framework.notification.factory.class">Rednose\FrameworkBundle\Notification\NotificationFactory</parameter>

        <!-- HTML purifier -->
        <parameter key="rednose_framework.purifier.factory.class">Rednose\FrameworkBundle\Purifier\PurifierFactory</parameter>

        <!-- Locale event listener -->
        <parameter key="rednose_framework.listener.locale.class">Rednose\FrameworkBundle\EventListener\LocaleListener</parameter>

        <parameter key="rednose_framework.form.type.file.class">Rednose\FrameworkBundle\Form\Type\FileType</parameter>
        <parameter key="rednose_framework.form.type.role_collection.class">Rednose\FrameworkBundle\Form\Type\RoleCollectionType</parameter>
        <parameter key="rednose_framework.form.type.prioritized_collection.class">Rednose\FrameworkBundle\Form\Type\PrioritizedCollectionType</parameter>

        <parameter key="rednose_framework.thumbnail_generator.class">Rednose\FrameworkBundle\Thumbnail\ThumbnailGenerator</parameter>

        <parameter key="rednose_framework.organization_context.class">Rednose\FrameworkBundle\Context\OrganizationContext</parameter>
        <parameter key="rednose_framework.session_context.class">Rednose\FrameworkBundle\Context\SessionContext</parameter>
    </parameters>

    <services>
        <service id="rednose_framework.organization_context" class="%rednose_framework.organization_context.class%">
            <argument type="service" id="security.token_storage" />
        </service>

        <service id="rednose_framework.session_context" class="%rednose_framework.session_context.class%">
            <argument type="service" id="session" />
        </service>

        <!-- Exceptions -->
        <service id="rednose_framework.exceptionhandler" class="%rednose_framework.exceptionhandler.class%">
            <argument type="service" id="kernel" />
            <argument type="service" id="templating" />
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-64" />
        </service>

        <!-- Redis -->
        <service id="rednose_framework.redis.factory" class="Rednose\FrameworkBundle\Redis\RedisFactory" public="false">
            <argument>%redis_host%</argument>
            <argument>%redis_auth%</argument>
        </service>

        <!-- Notifications -->
        <service id="rednose_framework.notification.factory" class="%rednose_framework.notification.factory.class%">
            <argument type="service" id="service_container"/>
        </service>

        <!-- Formatting -->
        <service id="rednose_framework.datetime_formatter" class="%rednose_framework.datetime_formatter.class%">
            <argument type="service" id="time.datetime_formatter"/>
            <call method="setRequest">
                <argument type="service" id="request" on-invalid="null" strict="false" />
            </call>
        </service>

        <!-- JMS Object constructor alias -->
        <service id="rednose_framework.doctrine_object_constructor" class="Rednose\FrameworkBundle\Serializer\Construction\DoctrineObjectConstructor" public="false">
            <argument type="service" id="doctrine"/>
            <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
        </service>

        <service id="jms_serializer.object_constructor" alias="rednose_framework.doctrine_object_constructor" public="false"/>

        <service id="rednose_framework.array_collection_handler" class="Rednose\FrameworkBundle\Serializer\Handler\ArrayCollectionHandler">
            <tag name="jms_serializer.subscribing_handler" />
        </service>

        <service id="jms_serializer.array_collection_handler" alias="rednose_framework.array_collection_handler"/>

        <!-- Doctrine event listener -->
        <service id="rednose_framework.doctrine_listener" class="%rednose_framework.doctrine_listener.class%">
            <argument type="service" id="event_dispatcher" />
            <tag name="doctrine.event_listener" event="postPersist" />
            <tag name="doctrine.event_listener" event="postUpdate" />
            <tag name="doctrine.event_listener" event="postRemove" />
        </service>

        <service id="rednose_framework.listener.locale" class="%rednose_framework.listener.locale.class%">
            <argument type="service" id="security.token_storage" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
        </service>

        <!-- File caching -->
        <service class="Rednose\FrameworkBundle\Cache\CacheFactory" id="rednose_framework.cache.cache_factory">
            <argument>%kernel.root_dir%/../web</argument>
            <argument>%kernel.cache_dir%/rednose_framework</argument>
            <argument>cache/%kernel.environment%</argument>
            <argument type="service" id="service_container" />
        </service>

        <!-- HTML purifier / lexer -->
        <service id="rednose_framework.purifier.factory" class="%rednose_framework.purifier.factory.class%"/>
        <service id="rednose_framework.purifier" factory-method="create" factory-service="rednose_framework.purifier.factory" class="%rednose_framework.purifier.factory.class%"/>
        <service id="rednose_framework.purifier.lexer" factory-method="createLexer" factory-service="rednose_framework.purifier.factory" class="%rednose_framework.purifier.factory.class%"/>

        <service id="rednose_framework.organization_param_converter" class="Rednose\FrameworkBundle\Request\ParamConverter\OrganizationParamConverter">
            <argument type="service" id="rednose_framework.organization_manager" />
            <tag name="request.param_converter" converter="organization" priority="10" />
        </service>

        <service id="rednose_framework.form.type.file.class" class="%rednose_framework.form.type.file.class%">
            <tag name="form.type" alias="rednose_file" />
        </service>

        <service id="rednose_framework.form.type.collection_type.class" class="%rednose_framework.form.type.role_collection.class%">
            <tag name="form.type" alias="rednose_role_collection" />
        </service>

        <service id="rednose_framework.form.type.prioritized_collection" class="%rednose_framework.form.type.prioritized_collection.class%" scope="request">
            <tag name="form.type" alias="rednose_prioritized_collection" />
            <argument type="service" id="request" />
        </service>

        <service id="rednose_framework.organization_serialization_listener" class="Rednose\FrameworkBundle\EventListener\OrganizationSerializationListener">
            <argument type="service" id="translator" />
            <tag name="jms_serializer.event_subscriber" event="serializer.post_serialize" method="onPostSerialize" priority="-64" />
        </service>

        <service id="rednose_framework.thumbnail_generator" class="%rednose_framework.thumbnail_generator.class%">
            <argument type="service" id="rednose_framework.cache.cache_factory"/>
        </service>
    </services>
</container>
