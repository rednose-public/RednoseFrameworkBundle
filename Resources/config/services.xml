<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="rednose._framework.doctrine_object_constructor.class">Rednose\FrameworkBundle\Serializer\Construction\DoctrineObjectConstructor</parameter>
  </parameters>

  <services>
   <service id="rednose._framework.doctrine_object_constructor" class="%rednose._framework.doctrine_object_constructor.class%" public="false">
     <argument type="service" id="doctrine"/>
     <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
   </service>

   <!-- Override JMS service to inject the `doctrine_object_constructor`, as there is no config parameter for this yet -->
   <service id="jms_serializer.serializer" class="%jms_serializer.serializer.class%" public="false">
    <argument type="service" id="jms_serializer.metadata_factory"/>
    <argument type="service" id="jms_serializer.handler_registry"/>
    <argument type="service" id="rednose._framework.doctrine_object_constructor"/>
    <argument type="collection"/>
    <!-- Serialization Visitors -->
    <argument type="collection"/>
    <!-- Deserialization Visitors -->
    <argument type="service" id="jms_serializer.event_dispatcher"/>
  </service>

  <service id="rednose_framework.authorize.form_type" class="Rednose\FrameworkBundle\Form\Type\AuthorizeFormType">
  </service>

  <service id="rednose_framework.authorize.form" factory-method="createNamed" factory-service="form.factory" class="Symfony\Component\Form\Form">
    <argument>rednose_framework_authorize</argument>
    <argument type="service" id="rednose_framework.authorize.form_type" />
  </service>

  <service id="rednose_framework.authorize.form_handler" class="Rednose\FrameworkBundle\Form\Handler\AuthorizeFormHandler" scope="request">
    <argument type="service" id="rednose_framework.authorize.form" />
    <argument type="service" id="request" />
    <argument type="service" id="security.context" />
    <argument type="service" id="fos_oauth_server.server" />
  </service>
</services>
</container>
