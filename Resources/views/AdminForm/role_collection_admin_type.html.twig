

<div class="role_collection_container" id="{{ full_name|replace({'[': '_', ']': '_'}) }}">
    <div class="role_template" data-template="true" ng-hide="true">
        <div class="datagrid-app-form-section">

            <div class="row">
                <div class="form-group">
                    <label class="col-sm-2 control-label">Name</label>
                    <div class="col-sm-10">
                        <input id="name" class="form-control" value="" type="text">
                    </div>
                </div>
            </div>

            <div class="row">
                {% for role in all_roles %}
                    <div class="col-md-3">
                        <nobr><label><input id="chk{{ loop.index0 }}" value="{{ role }}" type="checkbox" />&nbsp;{{ role }}</label></nobr>
                    </div>
                {% endfor %}
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-xs-11">
            <ul class="nav nav-tabs" style="border-bottom: 0;">
            </ul>
        </div>

        <div class="col-cs-1">
            <button class="btn btn-default add add-role-collection pull-right" onclick="return false;"><i class="fa fa-plus"></i></button>
        </div>
    </div>

    <div class="tab-pane fade" role="tabpanel">
    </div>
</div>

<script>
    var collectionRowCode_{{ full_name|replace({'[': '_', ']': '_'}) }} = function () {
        var containerId = '{{ full_name|replace({'[': '_', ']': '_'}) }}';
        var container   = $('#' + containerId);
        var tabNames    = [];
        var tabRoles     = {};

        function nameChange() {
            var nameField  = $(this),
                instanceId = nameField.data('tab').attr('data-id');
            caption    = nameField.val() ? nameField.val() : '(No name)';

            tabNames[instanceId] = caption;

            nameField.data('tab').find('a').html(caption);
        }

        function roleChange() {
            var checkboxField = $(this),
                role          = checkboxField.attr('value'),
                instanceId    = checkboxField.data('tab').attr('data-id');

            if (tabRoles[instanceId].indexOf(role) > -1) {
                tabRoles[instanceId].splice(tabRoles[instanceId].indexOf(role), 1);
            } else {
                tabRoles[instanceId].push(role);
            }
        }

        function addRoleCollection() {
            renderTab('(No name)', '[]');
        }

        function clickTab(tab) {
            var template = $(container.find('[data-template]').html());
            var data     = tabRoles[tab.attr('data-id')];

            $.each(data, function(idx, role) {
                if (role) {
                    var roleCheckbox = template.find('input[value=' + role + ']');

                    roleCheckbox.attr('checked', 'checked');
                }
            });

            template.find('input[type=checkbox]').each(function () {
                var roleCheckbox = $(this);

                roleCheckbox.on('change', roleChange);
                roleCheckbox.data('tab', tab);
            });

            var nameField = template.find('#name');

            nameField.val(tabNames[tab.attr('data-id')]);
            nameField.data('tab', tab);
            nameField.on('change', nameChange);
            nameField.on('keyup', nameChange);

            container.find('li.active').removeClass('active');
            container.find('.tab-pane').find('*').remove();
            container.find('.tab-pane').append(template);
            container.find('.tab-pane').css('opacity', 1);

            tab.addClass('active');
        }

        function deleteTab(tab) {
            var tabParent  = tab.parent();
            var instanceId = tab.attr('data-id');

            delete tabNames[instanceId];
            delete tabRoles[instanceId];

            tab.remove();

            var firstTab = tabParent.find('li');

            if (firstTab.length === 0) {
                container.find('.tab-pane').find('*').remove();
            } else {
                firstTab.trigger('click');
            }
        }

        function renderTab(name, data, id) {
            var instanceId = id;

            data = data.replace(/&quot;/g, '"', data);

            var uuid = function() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);

                    return v.toString(16);
                });
            };

            if (!instanceId) {
                instanceId = uuid();
            }

            tabNames[instanceId] = name;
            tabRoles[instanceId] = JSON.parse(data);

            var tab = $(
                '<li class="nav-item" data-id="' + instanceId + '">\n' +
                '    <a onclick="return false;" href="#">' + name + '&nbsp;<i class="fa fa-remove"></i></a>\n' +
                '</li>'
            );

            tab.on('click', function() {
                clickTab($(this));
            });

            tab.find('.fa-remove').on('click', function() {
                if (confirm('Remove role collection?')) {
                    deleteTab($(this).closest('li'));
                }
            });

            container.find('.nav-tabs').append(tab);

            return tab;
        }

        container.find('.add-role-collection').on('click', addRoleCollection);

        container.closest('form').on('submit', function () {
            var form = $(this);

            for (var instanceId in tabNames) {
                var nameInput = $('<input data-mutex="' + instanceId + '" name="{{ full_name }}[name][]" />'),
                    roleInput = $('<input data-mutex="' + instanceId + '" name="{{ full_name }}[roles][]" />'),
                    roleIds   = $('<input data-mutex="' + instanceId + '" name="{{ full_name }}[ids][]" />');

                roleIds.val(instanceId);
                nameInput.val(tabNames[instanceId]);
                roleInput.val(tabRoles[instanceId].join(','));

                // Remove left-over elements if an exception has occurred in the past.
                form.find('input[data-mutex=' + instanceId + ']').remove();

                form.append(roleIds);
                form.append(nameInput);
                form.append(roleInput);
            }
        });

        {% for name in names %}
        var tab = renderTab('{{ name }}', '{{ roles[loop.index0] }}', '{{ ids[loop.index0] }}');

        {% if loop.index0 == 0 %}
        clickTab(tab);
        {% endif %}
        {% endfor %}
    };

    collectionRowCode_{{ full_name|replace({'[': '_', ']': '_'}) }}();
</script>
